/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cievents;
import cievents.WeatherApp;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author brian
 */
public class createEventsUI extends javax.swing.JFrame 
{
    Connection conn=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    //public static String ciLocation;

    /**
     * Creates new form createEventsUI
     */
    public createEventsUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ciEventName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ciWhere = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        ciTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        ciMonth = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        ciDay = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        ciYear = new javax.swing.JComboBox();
        ciAddButton = new javax.swing.JButton();
        ciDeleteUpdate = new javax.swing.JButton();
        ciUpdateButton = new javax.swing.JButton();
        ErrorMessage = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ciCreator = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        ciTime = new javax.swing.JComboBox();
        ciToD = new javax.swing.JComboBox();
        ciMin = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ciWeatherButton = new javax.swing.JButton();
        inviteButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ciDesc = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ciguest = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Event Manger");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Event Name: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Description: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("When:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Where: ");

        ciWhere.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cal State Channel Islands", "UC Santa Barba", "UC Santa Rosa Islands", "", "" }));
        ciWhere.setSelectedItem(1);
        ciWhere.setToolTipText("");
        ciWhere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciWhereActionPerformed(evt);
            }
        });

        ciTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Creator Name", "Event Name", "Date", "Time", "Location"
            }
        ));
        ciTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ciTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ciTable);

        jLabel6.setText("Month:");

        ciMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", " " }));
        ciMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciMonthActionPerformed(evt);
            }
        });

        jLabel7.setText("Day:");

        ciDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "0" }));
        ciDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciDayActionPerformed(evt);
            }
        });

        jLabel8.setText("Year:");

        ciYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016" }));
        ciYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciYearActionPerformed(evt);
            }
        });

        ciAddButton.setText("Add Event");
        ciAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciAddButtonActionPerformed(evt);
            }
        });

        ciDeleteUpdate.setText("Delete");
        ciDeleteUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciDeleteUpdateActionPerformed(evt);
            }
        });

        ciUpdateButton.setText("Update");
        ciUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciUpdateButtonActionPerformed(evt);
            }
        });

        ErrorMessage.setForeground(new java.awt.Color(255, 51, 51));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Invite:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Creator Name: ");

        ciCreator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciCreatorActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Time: ");

        ciTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        ciToD.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));

        ciMin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "56", "57", "58", "59" }));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText(":");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Check Weather: ");

        ciWeatherButton.setText("Weather");
        ciWeatherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciWeatherButtonActionPerformed(evt);
            }
        });

        inviteButton.setText("Invite");

        ciDesc.setColumns(20);
        ciDesc.setRows(5);
        jScrollPane3.setViewportView(ciDesc);

        ciguest.setColumns(20);
        ciguest.setRows(5);
        jScrollPane2.setViewportView(ciguest);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(20, 20, 20)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ciMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ciDay, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ciYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(51, 51, 51)
                                    .addComponent(jLabel13)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ciTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(5, 5, 5)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ciMin, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(ciToD, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel2))
                                    .addGap(27, 27, 27)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ciEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ciCreator, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(ciWhere, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(18, 18, 18)
                                    .addComponent(ciWeatherButton))
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ciAddButton)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(inviteButton))
                                .addComponent(jScrollPane3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ciUpdateButton)
                                .addGap(32, 32, 32)
                                .addComponent(ciDeleteUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(100, 100, 100))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ciDeleteUpdate, ciUpdateButton});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ciDay, ciMin, ciMonth, ciTime, ciToD, ciYear});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ciCreator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ciEventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(ciMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(ciDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(ciYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ciTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ciToD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ciMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ciWhere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(ciWeatherButton))
                .addGap(19, 19, 19)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inviteButton))
                .addGap(20, 20, 20)
                .addComponent(ciAddButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ciUpdateButton)
                            .addComponent(ciDeleteUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ciMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ciMonthActionPerformed

    private void ciDeleteUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciDeleteUpdateActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) ciTable.getModel();
        if(ciTable.getSelectedRow() == -1)
        {
            if (ciTable.getRowCount() == 0)
            {
                ErrorMessage.setText("Table is Empty");
            }
            else
            {
                ErrorMessage.setText("You must select an event");
            }
        }
        else
        {
           model.removeRow(ciTable.getSelectedRow()); 
        }
        
        
        
    }//GEN-LAST:event_ciDeleteUpdateActionPerformed

    private void ciYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ciYearActionPerformed

    private void ciDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ciDayActionPerformed

    private void ciUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciUpdateButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ciTable.getModel();
        if(ciTable.getSelectedRow() == -1)
        {
            if (ciTable.getRowCount() == 0)
            {
                ErrorMessage.setText("Table is Empty");
            }
            else
            {
                ErrorMessage.setText("You must select an event");
            }
        }
        else
        {
           model.setValueAt(ciCreator.getText(), ciTable.getSelectedRow(), 0 ); 
           model.setValueAt(ciEventName.getText(), ciTable.getSelectedRow(), 1);
           model.setValueAt(ciMonth.getSelectedItem().toString() + "/" + ciDay.getSelectedItem().toString() + "/" + ciYear.getSelectedItem().toString(), ciTable.getSelectedRow(), 2);
           model.setValueAt(ciTime.getSelectedItem().toString() + ":" + ciMin.getSelectedItem().toString() + " " + ciToD.getSelectedItem().toString(), ciTable.getSelectedRow(), 3);
           model.setValueAt(ciWhere.getSelectedItem().toString(), ciTable.getSelectedRow(), 4);
            
        }
        
    }//GEN-LAST:event_ciUpdateButtonActionPerformed

    private void ciAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciAddButtonActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) ciTable.getModel();
        model.addRow(new Object[]
        {   ciCreator.getText(), 
            ciEventName.getText(), 
            ciMonth.getSelectedItem().toString() + "/" + ciDay.getSelectedItem().toString() + "/" + ciYear.getSelectedItem().toString(), 
            ciTime.getSelectedItem().toString() + ":" + ciMin.getSelectedItem().toString() + " " + ciToD.getSelectedItem().toString(), 
            ciWhere.getSelectedItem().toString()});

    }//GEN-LAST:event_ciAddButtonActionPerformed

    private void ciCreatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciCreatorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ciCreatorActionPerformed

    private void ciTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ciTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ciTable.getModel();
        ciCreator.setText(model.getValueAt(ciTable.getSelectedRow(), 0).toString());
        ciEventName.setText(model.getValueAt(ciTable.getSelectedRow(), 1).toString());
        ciMonth.setSelectedItem(model.getValueAt(ciTable.getSelectedRow(), 2).toString());
        ciDay.setSelectedItem(model.getValueAt(ciTable.getSelectedRow(), 2).toString()); 
        ciYear.setSelectedItem(model.getValueAt(ciTable.getSelectedRow(), 2).toString());
        ciTime.setSelectedItem(model.getValueAt(ciTable.getSelectedRow(), 3).toString());
        ciMin.setSelectedItem(model.getValueAt(ciTable.getSelectedRow(), 3).toString()); 
        ciToD.setSelectedItem(model.getValueAt(ciTable.getSelectedRow(), 3).toString()); 
        ciWhere.setSelectedItem(model.getValueAt(ciTable.getSelectedRow(), 3).toString());
        
    }//GEN-LAST:event_ciTableMouseClicked

    private void ciWeatherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciWeatherButtonActionPerformed
       
        JOptionPane.showMessageDialog(null,"Check Weather"); 
        WeatherApp weather = new WeatherApp();
        weather.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        weather.setVisible(true);
    }//GEN-LAST:event_ciWeatherButtonActionPerformed

    private void ciWhereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciWhereActionPerformed
        //JComboBox cb = (JComboBox)evt.getSource();
        //ciLocation = (String)cb.getSelectedItem();
    }//GEN-LAST:event_ciWhereActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(createEventsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(createEventsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(createEventsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(createEventsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new createEventsUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ErrorMessage;
    private javax.swing.JButton ciAddButton;
    private javax.swing.JTextField ciCreator;
    private javax.swing.JComboBox ciDay;
    private javax.swing.JButton ciDeleteUpdate;
    private javax.swing.JTextArea ciDesc;
    private javax.swing.JTextField ciEventName;
    private javax.swing.JComboBox ciMin;
    private javax.swing.JComboBox ciMonth;
    private javax.swing.JTable ciTable;
    private javax.swing.JComboBox ciTime;
    private javax.swing.JComboBox ciToD;
    private javax.swing.JButton ciUpdateButton;
    private javax.swing.JButton ciWeatherButton;
    private javax.swing.JComboBox ciWhere;
    private javax.swing.JComboBox ciYear;
    private javax.swing.JTextArea ciguest;
    private javax.swing.JButton inviteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
